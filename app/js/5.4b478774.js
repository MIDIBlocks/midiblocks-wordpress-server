(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[5],{"00d3":function(e,t,n){"use strict";var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"flex min-height-inherit"},[e.inline?e._e():n("div",{staticClass:"min-height-inherit position-relative workspace-toolbox",class:{blocklyToolboxDelete:!!e.blockBeingDragged},staticStyle:{flex:"0 0 auto"},on:{mouseenter:function(t){e.isMouseInQuasarToolbox=!0},mouseleave:function(t){e.isMouseInQuasarToolbox=!1}}},[n("div",{staticClass:"q-pa-sm flex column"},[n("q-list",[e._l(e.toolbox,(function(t){return["sep"===t.tag?n("q-separator"):n("q-item",{style:"color:"+t.colour,attrs:{clickable:"",active:e.isFlyoutOpen&&e.isFlyoutOpen===t.name},on:{click:function(n){return e.showToolboxFlyout(t,n)}}},[n("q-item-section",{attrs:{avatar:""}},[n("q-icon",{style:"color:"+t.colour,attrs:{name:t.icon}})],1),n("q-item-section",{staticClass:"gt-sm"},[n("q-item-label",{style:"color:"+t.colour},[e._v(e._s(t.name))])],1)],1)]}))],2),n("q-list",{staticStyle:{flex:"0 0 auto"}},[e._t("default")],2)],1)]),n("div",{staticClass:"min-height-inherit position-relative",on:{click:e.closeToolboxFLyout}},[n("div",{staticClass:"blockly",class:{"blockly-inline":e.inline},staticStyle:{"min-height":"inherit"}},[n("div",{ref:"blockly",staticClass:"blockly-wrap"}),n("xml",{ref:"toolbox",staticStyle:{display:"none"}},[e._l(e.toolbox,(function(t){return[n(t.tag,{tag:"component",attrs:{name:t.name,colour:t.colour,custom:t.custom}},[e._l(t.children,(function(t){return[n(t.tag,{tag:"component",attrs:{type:t.type,colour:t.colour}},[e._l(t.children,(function(t){return[n(t.tag,{tag:"component",attrs:{id:t.id,op:t.op,at:t.at,items:t.items,statement:t.statement,mode:t.mode,at1:t.at1,at2:t.at2,divisor_input:t.divisor_input,name:t.name,colour:t.colour}},[e._v(e._s(t.value)),e._l(t.children,(function(t){return[n(t.tag,{tag:"component",attrs:{type:t.type,name:t.name}},[e._v(e._s(t.value)),e._l(t.children,(function(t){return[n(t.tag,{tag:"component",attrs:{name:t.name}},[e._v(e._s(t.value))])]}))],2)]}))],2)]}))],2)]}))],2)]}))],2)],1)])])},o=[],r=(n("ddb0"),n("ded3")),i=n.n(r),l=n("54ca"),s=n.n(l),c=n("2f62"),d="/**\r\n * IMPORTANT NOTE\r\n * This project MUST be ES5 compliant as that is what the JS Interpreter uses\r\n */\r\n\r\n/**\r\n * Simple tests\r\n */\r\nhasNumber = /\\d/\r\n \r\n/**\r\n * Stores events being listened to\r\n * {eventName: [...callbacks]}\r\n */\r\n_events = {}\r\n\r\n/**\r\n * console.log helper to properly send data to main app w/o obfuscation\r\n */\r\nconsole = {\r\n  log: function (arguments) {\r\n    log(JSON.stringify(arguments))\r\n  }\r\n}\r\n\r\n/**\r\n * target.addEventListener subsitution\r\n * @param {String} eventName The eventName to store this callback under\r\n * @param {Array} args The list of arguments\r\n * @param {Function} callback The function to call when this event is triggered\r\n */\r\naddEventListener = function (eventName, args, callback) {\r\n  if (!_events[eventName]) {\r\n    _events[eventName] = []\r\n  }\r\n\r\n  _events[eventName].push({\r\n    args: args,\r\n    callback: callback\r\n  })\r\n}\r\n\r\n/**\r\n * Trigger an event\r\n * @param {String} eventName \r\n * @param {*} payload\r\n */\r\ntriggerEvent = function (eventName, payload) {\r\n  _events[eventName] && _events[eventName].forEach(function (event) {\r\n    event.callback({\r\n      args: event.args,\r\n      payload: JSON.parse(payload)\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * Plays a note\r\n */\r\nplayNote = function (payload) {\r\n  _playNote(JSON.stringify(payload))\r\n}\r\n\r\n/**\r\n * Compre helper for working with \"is\", \"is not\", etc\r\n */\r\ncompare = function (a, compare, b) {\r\n  switch (compare) {\r\n    case 'is':\r\n      return a == b\r\n    case 'is not':\r\n      return a != b\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a string belongs to the \"is any\" family (\"all\", \"any\", etc)\r\n */\r\nisAny = function (str) {\r\n  var list = ['any', 'all']\r\n  var isValid = false\r\n\r\n  list.forEach(function (item) {\r\n    if (str === item) isValid = true\r\n  });\r\n\r\n  return isValid\r\n}\r\n\r\n/**\r\n * Checks if a given note matches a webmidi.name\r\n * - If no octave present, then matches the key in any octave\r\n */\r\nisNote = function (a, compare, b) {\r\n  switch (compare) {\r\n    case 'is':\r\n      if (hasNumber.test()) {\r\n        return a == b.name.concat(b.octave)\r\n      } else {\r\n        return a == b.name\r\n      }\r\n\r\n    case 'is not':\r\n      if (hasNumber.test()) {\r\n        return a != b.name.concat(b.octave)\r\n      } else {\r\n        return a != b.name\r\n      }\r\n  }\r\n}",u=n("c62b"),m=n.n(u),p=n("2ef0"),h=n("7724"),g=n.n(h),v=s.a.Theme.defineTheme("midiblocks",{blockStyles:{logic_blocks:{colourPrimary:"#5d37f0",colourSecondary:"#635697",colourTertiary:"#453974"},loop_blocks:{colourPrimary:"#2ca300",colourSecondary:"#328514",colourTertiary:"#2d621a"},math_blocks:{colourPrimary:"#a599e9",colourSecondary:"#7e77a9",colourTertiary:"#575467"},procedure_blocks:{colourPrimary:"#ff628c",colourSecondary:"#b56278",colourTertiary:"#6e3c49"},variable_blocks:{colourPrimary:"#ff628c",colourSecondary:"#b56278",colourTertiary:"#6e3c49"},variable_dynamic_blocks:{colourPrimary:"#FF8C1A",colourSecondary:"#FF8000",colourTertiary:"#DB6E00"},hat_blocks:{colourPrimary:"#4C97FF",colourSecondary:"#4280D7",colourTertiary:"#3373CC",hat:"cap"}}}),b=n("3e52"),y={name:"Blockly",props:["options","toolbox","blocks","inline"],computed:i()({},Object(c["b"])(["devices"])),data(){return{blockly:null,interpreter:null,isFlyoutOpen:!1,blockBeingDragged:!1,lastClickedCategory:null,isMouseInQuasarToolbox:!1}},mounted(){let e=this.$props.options||{};e=Object(p["defaults"])(this.$props.options,{renderer:"zelos",sounds:!1,toolbox:this.$refs.toolbox,media:"media/",zoom:{controls:!0,pinch:!0,wheel:!0,startScale:.8},grid:{spacing:50,length:50,colour:"#9effff",snap:!0},theme:v}),this.blockly=s.a.inject(this.$refs.blockly,e),this.blockly.addChangeListener(this.onChange),this.$root.$on("blockly.prompt.submit",this.onPromptSubmit),this.addBlocks()},beforeDestroy(){this.$root.$off("blockly.prompt.submit",this.onPromptSubmit)},methods:{onChange(e){this.$emit("change",e),"dragStart"===e.element?this.blockBeingDragged=e:"dragStop"===e.element&&(this.isMouseInQuasarToolbox&&this.blockly.getBlockById(e.blockId).dispose(),this.blockBeingDragged=!1)},showToolboxFlyout(e,t){let n=[];e.custom?this.blockly.getFlyout().show(e.custom):(e.children.forEach(e=>{n.push(document.querySelector(`block[type="${e.type}"]`))}),this.blockly.getFlyout().show(n)),this.isFlyoutOpen=e.name,this.lastClickedCategory=t.target},onPromptSubmit(e){this.lastClickedCategory&&this.lastClickedCategory.click()},closeToolboxFLyout(e){let t=e.path.some(e=>e.classList&&e.classList.contains("blocklyFlyoutBackground"));this.isFlyoutOpen&&!t&&(this.blockly.getFlyout().hide(),this.isFlyoutOpen=!1)},run(){const e=s.a.JavaScript.workspaceToCode(this.blockly);this.interpreter=new g.a(b["transform"](d+"\n"+e,{presets:["env"],sourceType:"script"}).code,this.setupInterpreter),this.interpreter.run()},setupInterpreter(e,t){e.setProperty(t,"log",e.createNativeFunction(e=>{console.log("ðŸ“¦ log: ",...JSON.parse(e))})),e.setProperty(t,"_playNote",e.createNativeFunction(e=>{let t=JSON.parse(e);"all"===t.device&&Object.keys(this.devices.outputs).forEach(e=>{const n=m.a.getOutputById(e);n.playNote(t.note,t.channel)})}))},addBlocks(){this.blocks.forEach(e=>{s.a.Blocks[e.title]={init:function(){this.jsonInit(JSON.parse(e.block_definition))}},s.a.JavaScript[e.title]=()=>"";const t=this.blockly.newBlock(e.title);t.initSvg(),t.render(),this.blockly.centerOnBlock(t.id),this.blockly.scroll(this.blockly.scrollX,this.blockly.scrollY)})}}},f=y,_=(n("8f13"),n("2877")),k=n("1c1c"),E=n("eb85"),w=n("66e5"),N=n("4074"),O=n("0016"),T=n("0170"),F=n("eebe"),S=n.n(F),C=Object(_["a"])(f,a,o,!1,null,null,null);t["a"]=C.exports;S()(C,"components",{QList:k["a"],QSeparator:E["a"],QItem:w["a"],QItemSection:N["a"],QIcon:O["a"],QItemLabel:T["a"]})},"8f13":function(e,t,n){"use strict";var a=n("c80c"),o=n.n(a);o.a},c80c:function(e,t,n){},cf36:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("q-page",{staticClass:"full-height"},[n("Workspace",{ref:"workspace",attrs:{options:e.options,toolbox:e.toolbox,blocks:[]},on:{change:e.workspaceEventHandler}})],1)},o=[],r=(n("c975"),n("ddb0"),n("2ef0")),i=n("00d3"),l=n("8ded"),s=n.n(l),c=n("b7fd");c["JavaScript"]["midi_on_event"]=function(e){const t=e.getFieldValue("event"),n=e.getFieldValue("device"),a=c["JavaScript"].valueToCode(e,"args",c["JavaScript"].ORDER_ATOMIC),o=c["JavaScript"].statementToCode(e,"statements");let r=`addEventListener('${t}', [{\n  type: 'midi_arg_compare_device',\n  condition: 'is',\n  device: '${n}'\n}, ${a}], function (event) {\n  var data = event.payload;\n  var args = event.args;\n\n  console.log('event', event);\n  \n  // Exit if midi_args fail\n  var isValid = true;\n  event.args.forEach(function (arg) {\n    switch (arg.type) {\n      case 'midi_arg_compare_device':\n        if (!isAny(arg.device) && !compare(arg.device, arg.condition, data.target.id)) isValid = false;\n      break;\n      case 'midi_arg_compare_note':\n        if (!isAny(arg.note) && !isNote(arg.note, arg.condition, data.note)) isValid = false;\n      break;\n    }\n  });\n  if (!isValid) return;\n  \n${o}\n});\n`;return r},c["Blocks"]["midi_on_event"]={init:function(){this.appendValueInput("args").setCheck("midi_arg").appendField("ðŸŽ¹ MIDI").appendField(new c["FieldDropdown"]([["Note On","noteon"],["Note Off","noteoff"],["Control Change","controlchange"]]),"event").appendField("from").appendField(new c["FieldTextInput"]("any"),"device"),this.appendStatementInput("statements").setCheck(null),this.setInputsInline(!1),this.setColour("#fad000"),this.setTooltip("Runs the midiblock when the selected MIDI event is triggered from the specified device. Attach MIDI Args to the right to fine-tune the event"),this.setHelpUrl("https://midiblocks.com/block/midi_on_event")}},c["JavaScript"]["midi_arg_compare_note"]=function(e){var t=e.getFieldValue("condition"),n=e.getFieldValue("note"),a=c["JavaScript"].valueToCode(e,"args",c["JavaScript"].ORDER_ATOMIC),o=`{\n  type: 'midi_arg_compare_note',\n  condition: '${t}',\n  note: '${n}'\n}`;return a&&(o+=", "+a),[o,c["JavaScript"].ORDER_ATOMIC]},c["Blocks"]["midi_arg_compare_note"]={init:function(){this.appendValueInput("args").setCheck("midi_arg").appendField("when note").appendField(new c["FieldDropdown"]([["is","is"],["is not","is not"]]),"condition").appendField(new c["FieldTextInput"]("any"),"note"),this.setOutput(!0,"midi_arg"),this.setColour("#FF9D00"),this.setTooltip("Compares the MIDI note"),this.setHelpUrl("https://midiblocks.com/block/midi_arg_compare_note")}},c["JavaScript"]["midi_send_note"]=function(e){let t=e.getFieldValue("note"),n=e.getFieldValue("device"),a=e.getFieldValue("channel"),o=`playNote({\n  event: typeof event !== 'undefined' ? event : null,\n  note: '${t}',\n  channel: '${a}',\n  device: '${n}'\n});\n`;return o},c["Blocks"]["midi_send_note"]={init:function(){this.appendDummyInput().appendField("Play note").appendField(new c["FieldTextInput"]("C4"),"note").appendField("on device").appendField(new c["FieldTextInput"]("all"),"device").appendField("on channel").appendField(new c["FieldTextInput"]("all"),"channel"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour("#2EC4B6"),this.setTooltip(""),this.setHelpUrl("")}};var d=n("c62b"),u=n.n(d),m=n("7724"),p=n.n(m),h=n("54ca"),g=n.n(h),v=[{tag:"category",category:"event",name:"Events",icon:"fas fa-gamepad",colour:"#fad000",children:[{tag:"block",type:"midi_on_event"}]},{tag:"category",category:"event_modifier",name:"Event Modifiers",icon:"fas fa-filter",colour:"#FF9D00",children:[{tag:"block",type:"midi_arg_compare_note"}]},{tag:"category",category:"event_send",name:"Send Event",icon:"fas fa-broadcast-tower",colour:"#2EC4B6",children:[{tag:"block",type:"midi_send_note"}]},{tag:"sep",children:[]},{tag:"category",category:"logic",name:"Logic",colour:"#5D37F0",icon:"fas fa-code-branch fa-flip-vertical",children:[{tag:"block",type:"controls_if"},{tag:"block",type:"logic_compare",children:[{tag:"field",name:"OP",value:"EQ"}]},{tag:"block",type:"logic_operation",children:[{tag:"field",name:"OP",value:"AND"}]},{tag:"block",type:"logic_negate"},{tag:"block",type:"logic_boolean",children:[{tag:"field",name:"BOOL",value:"TRUE"}]},{tag:"block",type:"logic_null"},{tag:"block",type:"logic_ternary"}]},{tag:"category",name:"Loops",category:"loops",colour:"#2ca300",icon:"fas fa-infinity",children:[{tag:"block",type:"controls_repeat_ext",children:[{tag:"value",name:"TIMES",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:10}]}]}]},{tag:"block",type:"controls_whileUntil",children:[{tag:"field",name:"MODE",value:"WHILE"}]},{tag:"block",type:"controls_for",children:[{tag:"field",name:"VAR",id:"+x@[E{uUuMC(G!%lB~vF",value:"i"},{tag:"value",name:"FROM",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:1}]}]},{tag:"value",name:"TO",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:10}]}]},{tag:"value",name:"BY",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:1}]}]}]},{tag:"block",type:"controls_forEach",children:[{tag:"field",name:"VAR",id:"E`D{pL/f#h?~8#[VL5rC",value:"j"}]},{tag:"block",type:"controls_flow_statements",children:[{tag:"field",name:"FLOW",value:"BREAK"}]}]},{tag:"category",name:"Math",category:"events",colour:"#A599E9",icon:"fas fa-calculator",children:[{tag:"block",type:"math_number",children:[{tag:"field",name:"NUM",value:0}]},{tag:"block",type:"math_arithmetic",children:[{tag:"field",name:"OP",value:"ADD"},{tag:"value",name:"A",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:1}]}]},{tag:"value",name:"B",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:1}]}]}]},{tag:"block",type:"math_single",children:[{tag:"field",name:"OP",value:"ROOT"},{tag:"value",name:"NUM",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:9}]}]}]},{tag:"block",type:"math_trig",children:[{tag:"field",name:"OP",value:"SIN"},{tag:"value",name:"NUM",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:45}]}]}]},{tag:"block",type:"math_constant",children:[{tag:"field",name:"CONSTANT",value:"PI"}]},{tag:"block",type:"math_number_property",children:[{tag:"mutation",divisor_input:"false"},{tag:"field",name:"PROPERTY",value:"EVEN"},{tag:"value",name:"NUMBER_TO_CHECK",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:0}]}]}]},{tag:"block",type:"math_round",children:[{tag:"field",name:"OP",value:"ROUND"},{tag:"value",name:"NUM",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:3.1}]}]}]},{tag:"block",type:"math_on_list",children:[{tag:"mutation",op:"SUM"},{tag:"field",name:"OP",value:"SUM"}]},{tag:"block",type:"math_modulo",children:[{tag:"value",name:"DIVIDEND",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:64}]}]},{tag:"value",name:"DIVISOR",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:10}]}]}]},{tag:"block",type:"math_constrain",children:[{tag:"value",name:"VALUE",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:50}]}]},{tag:"value",name:"LOW",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:1}]}]},{tag:"value",name:"HIGH",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:100}]}]}]},{tag:"block",type:"math_random_int",children:[{tag:"value",name:"FROM",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:1}]}]},{tag:"value",name:"TO",children:[{tag:"shadow",type:"math_number",children:[{tag:"field",name:"NUM",value:100}]}]}]},{tag:"block",type:"math_random_float"}]},{tag:"sep",children:[]},{tag:"category",name:"Variables",icon:"fas fa-box",colour:"#ff628c",custom:"VARIABLE",children:[]},{tag:"category",name:"Functions",colour:"#ff628c",icon:"fas fa-plug",custom:"PROCEDURE",children:[]}],b={name:"MainLayout",components:{Workspace:i["a"]},mounted(){u.a.enable(e=>{const t={},n={};this.errors.webmidi.enable=e,u.a.inputs.forEach(e=>{t[e.id]=e,e.led=!1,e.lastMessage="",this.bindInput(e.id)}),u.a.outputs.forEach(e=>{n[e.id]=e}),this.$store.commit("set",["devices",{inputs:t,outputs:n}])});const e=s.a.get("currentStudio",{});e.workspace?g.a.Xml.domToWorkspace(g.a.Xml.textToDom(e.workspace),this.$refs.workspace.blockly):g.a.Xml.domToWorkspace(g.a.Xml.textToDom('<xml xmlns="https://developers.google.com/blockly/xml"></xml>'),this.$refs.workspace.blockly),this.$root.$on("interpreter.triggerEvent",this.triggerEvent),this.$refs.workspace.blockly.addChangeListener(g.a.Events.disableOrphans)},watch:{splitter:Object(r["throttle"])((function(){s.a.set("splitter",this.splitter),setTimeout(()=>{window.dispatchEvent(new Event("resize"))})}),50,{leading:!0,trailing:!0})},data(){return{hasLoaded:!1,errors:{webmidi:{enable:!1}},options:{},toolbox:this.getToolbox(),splitter:s.a.get("splitter")||window.innerWidth/3}},methods:{workspaceEventHandler(e){switch(e.type){case g.a.Events.FINISHED_LOADING:this.hasLoaded=!0;break;case g.a.Events.BLOCK_CREATE:case g.a.Events.BLOCK_DELETE:case g.a.Events.BLOCK_CHANGE:case g.a.Events.BLOCK_MOVE:case g.a.Events.VAR_CREATE:case g.a.Events.VAR_DELETE:case g.a.Events.VAR_RENAME:this.$refs.workspace.run(),this.hasLoaded&&this.autosave();break}},getToolbox(){const e=[...v],t=s.a.get("blocks",{}),n=e.map(e=>e.category||"");return Object.keys(t).forEach(a=>{const o=t[a],r=n.indexOf(o.category);e[r]&&(e[r].children.push({tag:"block",type:o.json.type}),g.a.Blocks[o.json.type]={init:function(){this.jsonInit(o.json)}},g.a.JavaScript[o.json.type]=function(e){let t=o.code||"";return t})}),e},autosave(){s.a.set("currentStudio",{workspace:g.a.Xml.domToText(g.a.Xml.workspaceToDom(this.$refs.workspace.blockly))})},bindInput(e){const t=u.a.getInputById(e),n=["activesensing","channelaftertouch","channelmode","clock","continue","controlchange","keyaftertouch","noteoff","noteon","nrpn","pitchbend","programchange","reset","songposition","songselect","start","stop","sysex","timecode","tuningrequest","unknownsystemmessage"];n.forEach(e=>{t.addListener(e,"all",t=>{this.$root.$emit("interpreter.triggerEvent",e,t)})}),t.addListener("midimessage","all",e=>{this.$store.commit("set",[`devices.inputs['${e.target.id}'].led`,!0]),setTimeout(()=>{this.$store.commit("set",[`devices.inputs['${e.target.id}'].led`,!1])},10)})},triggerEvent(e,t){if(this.code){let n=Object.assign({},t);n.target=Object.assign({},n.target),delete n.target._midiInput,delete n.target._userHandlers,delete n.target.lastMessage,n=JSON.stringify(n),p.a.appendCode(`triggerEvent('${e}', '${n}')`),p.a.run()}let n;switch(e){case"noteon":case"noteoff":n=`[${t.note.number}, ${t.note.name}, ${t.note.octave}]`;break;case"controlchange":n=`[${t.controller.number}, ${t.controller.name}]`;break}this.$store.commit("set",[`devices.inputs['${t.target.id}'].lastMessage`,`<div>\n          <strong>${e}</strong>:\n          <span>${n}</span>\n        </div>\n        <div>\n          <strong>data</strong>:\n          <span>[${t.data[0]}, ${t.data[1]}, ${t.data[2]}]</span>\n        </div>`])}}},y=b,f=n("2877"),_=n("9989"),k=n("eebe"),E=n.n(k),w=Object(f["a"])(y,a,o,!1,null,null,null);t["default"]=w.exports;E()(w,"components",{QPage:_["a"]})}}]);