(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[4],{"00d3":function(e,n,t){"use strict";var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"blockly",staticStyle:{"min-height":"inherit"}},[t("div",{ref:"blockly",staticClass:"blockly-wrap"}),t("xml",{ref:"toolbox",staticStyle:{display:"none"}},[e._t("default")],2)],1)},a=[],s=(t("ddb0"),t("ded3")),o=t.n(s),i=t("54ca"),c=t.n(i),l=t("2f62"),p="/**\r\n * IMPORTANT NOTE\r\n * This project MUST be ES5 compliant as that is what the JS Interpreter uses\r\n */\r\n\r\n/**\r\n * Simple tests\r\n */\r\nhasNumber = /\\d/\r\n \r\n/**\r\n * Stores events being listened to\r\n * {eventName: [...callbacks]}\r\n */\r\n_events = {}\r\n\r\n/**\r\n * console.log helper to properly send data to main app w/o obfuscation\r\n */\r\nconsole = {\r\n  log: function (arguments) {\r\n    log(JSON.stringify(arguments))\r\n  }\r\n}\r\n\r\n/**\r\n * target.addEventListener subsitution\r\n * @param {String} eventName The eventName to store this callback under\r\n * @param {Array} args The list of arguments\r\n * @param {Function} callback The function to call when this event is triggered\r\n */\r\naddEventListener = function (eventName, args, callback) {\r\n  if (!_events[eventName]) {\r\n    _events[eventName] = []\r\n  }\r\n\r\n  _events[eventName].push({\r\n    args: args,\r\n    callback: callback\r\n  })\r\n}\r\n\r\n/**\r\n * Trigger an event\r\n * @param {String} eventName \r\n * @param {*} payload\r\n */\r\ntriggerEvent = function (eventName, payload) {\r\n  _events[eventName] && _events[eventName].forEach(function (event) {\r\n    event.callback({\r\n      args: event.args,\r\n      payload: JSON.parse(payload)\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * Plays a note\r\n */\r\nplayNote = function (payload) {\r\n  _playNote(JSON.stringify(payload))\r\n}\r\n\r\n/**\r\n * Compre helper for working with \"is\", \"is not\", etc\r\n */\r\ncompare = function (a, compare, b) {\r\n  switch (compare) {\r\n    case 'is':\r\n      return a == b\r\n    case 'is not':\r\n      return a != b\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a string belongs to the \"is any\" family (\"all\", \"any\", etc)\r\n */\r\nisAny = function (str) {\r\n  var list = ['any', 'all']\r\n  var isValid = false\r\n\r\n  list.forEach(function (item) {\r\n    if (str === item) isValid = true\r\n  });\r\n\r\n  return isValid\r\n}\r\n\r\n/**\r\n * Checks if a given note matches a webmidi.name\r\n * - If no octave present, then matches the key in any octave\r\n */\r\nisNote = function (a, compare, b) {\r\n  switch (compare) {\r\n    case 'is':\r\n      if (hasNumber.test()) {\r\n        return a == b.name.concat(b.octave)\r\n      } else {\r\n        return a == b.name\r\n      }\r\n\r\n    case 'is not':\r\n      if (hasNumber.test()) {\r\n        return a != b.name.concat(b.octave)\r\n      } else {\r\n        return a != b.name\r\n      }\r\n  }\r\n}",h=t("c62b"),d=t.n(h),u=t("2ef0"),m={name:"Blockly",props:["options","blocks"],watch:{"workspace.code"(e){this.$store.commit("set",["workspace.interpreter",new window.Interpreter(p+"\n"+this.workspace.code,this.setupInterpreter)]),this.workspace.interpreter.run()}},computed:o()({},Object(l["b"])(["workspace","devices"])),data(){return{blockly:null,interpreter:null}},mounted(){let e=this.$props.options||{};e=Object(u["defaults"])(this.$props.options,{renderer:"zelos",sounds:!1,toolbox:this.$refs.toolbox,media:"media/",zoom:{controls:!0,pinch:!0,wheel:!0,startScale:.8},grid:{spacing:50,length:50,colour:"#9effff",snap:!0}}),this.blockly=c.a.inject(this.$refs.blockly,e),this.blockly.addChangeListener(this.onChange),this.addBlocks()},methods:{onChange(e){this.$emit("change",e)},setupInterpreter(e,n){e.setProperty(n,"log",e.createNativeFunction(e=>{console.log("ðŸ“¦ log: ",...JSON.parse(e))})),e.setProperty(n,"_playNote",e.createNativeFunction(e=>{let n=JSON.parse(e);"all"===n.device&&Object.keys(this.devices.outputs).forEach(e=>{const t=d.a.getOutputById(e);t.playNote(n.note,n.channel)})}))},addBlocks(){this.blocks.forEach(e=>{c.a.Blocks[e.title]={init:function(){this.jsonInit(JSON.parse(e.block_definition))}},c.a.JavaScript[e.title]=()=>"";const n=this.blockly.newBlock(e.title);n.initSvg(),n.render(),this.blockly.centerOnBlock(n.id),this.blockly.scroll(this.blockly.scrollX,this.blockly.scrollY)})}}},b=m,f=t("2877"),y=Object(f["a"])(b,r,a,!1,null,null,null);n["a"]=y.exports},"730a":function(e,n,t){"use strict";t.r(n);var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("q-page",{staticClass:"full-height"},[t("section",{staticClass:"content"},[t("h1",[e._v("Library")]),e.post.isChecking?t("div",{staticClass:"center-children"},[t("q-spinner",{attrs:{color:"primary",size:"5em"}})],1):t("div",{domProps:{innerHTML:e._s(e.post.content)}}),[t("div",{staticClass:"row q-col-gutter-md"},e._l(e.blocks,(function(n){return t("div",{key:n.title,staticClass:"col-12 col-sm-6 col-lg-4 col-xl-3"},[t("q-card",[t("q-card-section",[t("Workspace",{staticClass:"inline",staticStyle:{right:"0"},attrs:{options:e.options,blocks:[n]}},[t("category",{attrs:{name:"Readonly",colour:"#fff"}},e._l(e.blocks,(function(e){return t("block",{key:e.type,attrs:{type:e.type}})})),1)],1)],1),t("q-separator"),t("q-card-section",[t("h3",[e._v(e._s(n.title))]),t("p",[e._v(e._s(n.short_description[0]))])])],1)],1)})),0)]],2)])},a=[],s=t("ded3"),o=t.n(s),i=t("00d3"),c=t("2f62"),l={name:"LibraryHome",components:{Workspace:i["a"]},computed:o()({},Object(c["b"])(["post"])),data(){return{blocks:[],options:{trashcan:!1,zoom:{controls:!1,pinch:!0,wheel:!0,startScale:.75}}}},mounted(){this.$store.dispatch("apiGet","library").then(e=>{this.blocks=e.data.blocks}).catch(e=>{this.$root.$emit("error",e)})}},p=l,h=t("2877"),d=t("9989"),u=t("0d59"),m=t("f09f"),b=t("a370"),f=t("eb85"),y=t("eebe"),v=t.n(y),k=Object(h["a"])(p,r,a,!1,null,null,null);n["default"]=k.exports;v()(k,"components",{QPage:d["a"],QSpinner:u["a"],QCard:m["a"],QCardSection:b["a"],QSeparator:f["a"]})}}]);