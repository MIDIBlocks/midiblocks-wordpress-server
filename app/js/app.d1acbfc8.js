(function(e){function t(t){for(var o,i,r=t[0],d=t[1],s=t[2],c=0,p=[];c<r.length;c++)i=r[c],Object.prototype.hasOwnProperty.call(a,i)&&a[i]&&p.push(a[i][0]),a[i]=0;for(o in d)Object.prototype.hasOwnProperty.call(d,o)&&(e[o]=d[o]);m&&m(t);while(p.length)p.shift()();return l.push.apply(l,s||[]),n()}function n(){for(var e,t=0;t<l.length;t++){for(var n=l[t],o=!0,i=1;i<n.length;i++){var r=n[i];0!==a[r]&&(o=!1)}o&&(l.splice(t--,1),e=d(d.s=n[0]))}return e}var o={},i={1:0},a={1:0},l=[];function r(e){return d.p+"js/"+({}[e]||e)+"."+{2:"3a45e11e",3:"1274c0d1",4:"ebb24544",5:"8dc8971e",6:"568e392a",7:"73da52cc",8:"c4f49f33",9:"7025d464"}[e]+".js"}function d(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,d),n.l=!0,n.exports}d.e=function(e){var t=[],n={2:1,3:1,4:1,5:1};i[e]?t.push(i[e]):0!==i[e]&&n[e]&&t.push(i[e]=new Promise((function(t,n){for(var o="css/"+({}[e]||e)+"."+{2:"f9283e03",3:"8f6d98b4",4:"8f6d98b4",5:"8f6d98b4",6:"31d6cfe0",7:"31d6cfe0",8:"31d6cfe0",9:"31d6cfe0"}[e]+".css",a=d.p+o,l=document.getElementsByTagName("link"),r=0;r<l.length;r++){var s=l[r],c=s.getAttribute("data-href")||s.getAttribute("href");if("stylesheet"===s.rel&&(c===o||c===a))return t()}var p=document.getElementsByTagName("style");for(r=0;r<p.length;r++){s=p[r],c=s.getAttribute("data-href");if(c===o||c===a)return t()}var m=document.createElement("link");m.rel="stylesheet",m.type="text/css",m.onload=t,m.onerror=function(t){var o=t&&t.target&&t.target.src||a,l=new Error("Loading CSS chunk "+e+" failed.\n("+o+")");l.code="CSS_CHUNK_LOAD_FAILED",l.request=o,delete i[e],m.parentNode.removeChild(m),n(l)},m.href=a;var f=document.getElementsByTagName("head")[0];f.appendChild(m)})).then((function(){i[e]=0})));var o=a[e];if(0!==o)if(o)t.push(o[2]);else{var l=new Promise((function(t,n){o=a[e]=[t,n]}));t.push(o[2]=l);var s,c=document.createElement("script");c.charset="utf-8",c.timeout=120,d.nc&&c.setAttribute("nonce",d.nc),c.src=r(e);var p=new Error;s=function(t){c.onerror=c.onload=null,clearTimeout(m);var n=a[e];if(0!==n){if(n){var o=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;p.message="Loading chunk "+e+" failed.\n("+o+": "+i+")",p.name="ChunkLoadError",p.type=o,p.request=i,n[1](p)}a[e]=void 0}};var m=setTimeout((function(){s({type:"timeout",target:c})}),12e4);c.onerror=c.onload=s,document.head.appendChild(c)}return Promise.all(t)},d.m=e,d.c=o,d.d=function(e,t,n){d.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},d.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},d.t=function(e,t){if(1&t&&(e=d(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(d.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)d.d(n,o,function(t){return e[t]}.bind(null,o));return n},d.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return d.d(t,"a",t),t},d.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},d.p="/wp-content/themes/midiblocks/app/",d.oe=function(e){throw console.error(e),e};var s=window["webpackJsonp"]=window["webpackJsonp"]||[],c=s.push.bind(s);s.push=t,s=s.slice();for(var p=0;p<s.length;p++)t(s[p]);var m=c;l.push([0,0]),n()})({0:function(e,t,n){e.exports=n("2f39")},"0047":function(e,t,n){},1578:function(e,t,n){},"2f39":function(e,t,n){"use strict";n.r(t);n("5319");var o=n("c973"),i=n.n(o),a=(n("573e"),n("7d6e"),n("e54f"),n("985d"),n("0047"),n("bd61"),n("5a21"),n("1578"),n("2b0e")),l=n("1f91"),r=n("42d2"),d=n("b05d"),s=n("2a19");a["a"].use(d["a"],{config:{dark:!0,storageMode:"local"},lang:l["a"],iconSet:r["a"],plugins:{Notify:s["a"]}});var c=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{key:e.reloads,attrs:{id:"q-app"}},[n("router-view"),n("q-dialog",{attrs:{persistent:""},model:{value:!!e.errors.generic,callback:function(t){e.$set(!!e.errors,"generic",t)},expression:"!!errors.generic"}},[n("q-card",{staticClass:"bg-negative"},[n("q-card-section",{staticClass:"row items-center"},[n("q-avatar",{staticClass:"text-negative",attrs:{icon:"fas fa-exclamation-triangle",color:"white"}}),n("span",{staticClass:"q-ml-sm text-white"},[e._v(e._s(e.errors.generic))])],1),n("q-card-actions",{attrs:{align:"right"}},[n("q-btn",{staticClass:"text-black",attrs:{color:"white"},on:{click:e.goHome}},[e._v("Go to home page")])],1)],1)],1),n("Prompt")],1)},p=[],m=(n("e6cf"),n("a79d"),n("ded3")),f=n.n(m),u=n("2ef0"),b=n("54ca"),v=n.n(b),y=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("q-dialog",{model:{value:e.prompt.visible,callback:function(t){e.$set(e.prompt,"visible",t)},expression:"prompt.visible"}},[n("q-card",[n("q-card-section",[n("h3",[e._v(e._s(e.prompt.message))]),n("q-input",{ref:"promptValue",on:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.submitPrompt(t)}},model:{value:e.prompt.value,callback:function(t){e.$set(e.prompt,"value",t)},expression:"prompt.value"}})],1),n("q-card-actions",{attrs:{align:"right"}},[n("q-btn",{attrs:{color:"white",flat:""},on:{click:function(t){e.prompt.visible=!1}}},[e._v("Cancel")]),n("q-space"),n("q-btn",{attrs:{color:"secondary"},on:{click:e.submitPrompt}},[e._v("Done")])],1)],1)],1)},h=[],g={name:"Prompt",data(){return{prompt:{visible:!1,message:"",value:null,callback:null}}},mounted(){v.a.prompt=this.onBlocklyPrompt},methods:{onBlocklyPrompt(e,t,n){this.prompt.visible=!0,this.prompt.message=e,this.prompt.value=t,this.prompt.callback=n,this.$nextTick(()=>{this.$refs.promptValue.focus()})},submitPrompt(){this.prompt.callback&&(this.prompt.callback(this.prompt.value),this.$root.$emit("blockly.prompt.submit",this.prompt.value)),this.prompt.visible=!1}}},_=g,k=n("2877"),x=n("24e8"),E=n("f09f"),w=n("a370"),T=n("27f9"),O=n("4b7e"),I=n("9c40"),C=n("2c91"),N=n("eebe"),P=n.n(N),S=Object(k["a"])(_,y,h,!1,null,null,null),A=S.exports;P()(S,"components",{QDialog:x["a"],QCard:E["a"],QCardSection:w["a"],QInput:T["a"],QCardActions:O["a"],QBtn:I["a"],QSpace:C["a"]});var L=n("2f62"),$=n("a54e"),D=n("8ded"),M=n.n(D),F={name:"App",components:{Prompt:A},computed:f()({},Object(L["b"])(["reloads"])),watch:{$route(e){e.query.apiDomain&&this.$store.commit("set",["api.domain",e.query.apiDomain]),this.$store.commit("set",["post.isChecking",!0]),this.$store.dispatch("apiGet",{path:"post",url:this.$route.path}).then(e=>{const t=e.data||{};t.content&&(t.content=this.$markdown.render(t.content)),this.$store.commit("set",["post",t])}).finally(()=>{this.$store.commit("set",["post.isChecking",!1])})}},data(){return{errors:{generic:""}}},mounted(){this.$root.$on("prepareRoute",this.prepareRoute),this.$root.$on("error",this.onError),Object(u["set"])(window,"app.version",this.$v),Object(u["set"])(window,"app.$",this),localStorage.currentFactory||Object.keys($.localStorage).forEach(e=>{M.a.set(e,$.localStorage[e])})},destroyed(){this.$root.$off("error",this.onError)},methods:{onError(e){this.errors.generic=e},goHome(){this.$router.push({name:"Home"}),this.errors.generic=""}}},j=F,U=n("cb32"),q=Object(k["a"])(j,c,p,!1,null,null,null),H=q.exports;P()(q,"components",{QDialog:x["a"],QCard:E["a"],QCardSection:w["a"],QAvatar:U["a"],QCardActions:O["a"],QBtn:I["a"]});var B=n("bc3a"),R=n.n(B),X={get:{boot(){return{mainNavPanel:{links:[{title:"Home",description:"Get an overview of what Midiblocks is about",link:"/",icon:"fas fa-home"},{title:"Studio",description:"Visually map and program your MIDI devices",link:"/studio",icon:"fas fa-puzzle-piece fa-flip-both"},{title:"Factory",description:"Create custom blocks with JavaScript",link:"/factory",icon:"fas fa-laptop-code"},{title:"Library",description:"Browse our library of user created Midiblocks and learn how to use them",link:"/library",icon:"fas fa-cubes"}]},user:{isLoggedIn:!1}}},post(){return{}},library(){return{blocks:[{type:"midi_on_event",title:"midi_on_event",short_description:["Runs the midiblock when the selected MIDI event is triggered from the specified device. Attach MIDI Args to the right to fine-tune the event"],block_definition:['{\r\n  "type": "midi_on_event",\r\n  "message0": "On MIDI %1 from device %2 %3 %4",\r\n  "args0": [\r\n    {\r\n      "type": "field_dropdown",\r\n      "name": "event",\r\n      "options": [\r\n        [\r\n          "Note On",\r\n          "noteon"\r\n        ],\r\n        [\r\n          "Note Off",\r\n          "noteoff"\r\n        ],\r\n        [\r\n          "Control Change",\r\n          "controlchange"\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      "type": "field_input",\r\n      "name": "device",\r\n      "text": "any"\r\n    },\r\n    {\r\n      "type": "input_value",\r\n      "name": "args",\r\n      "check": "midi_arg"\r\n    },\r\n    {\r\n      "type": "input_statement",\r\n      "name": "statements"\r\n    }\r\n  ],\r\n  "inputsInline": false,\r\n  "colour": "#fad000",\r\n  "tooltip": "Runs the midiblock when the selected MIDI event is triggered from the specified device. Attach MIDI Args to the right to fine-tune the event",\r\n  "helpUrl": "https://midiblocks.com/block/midi_on_event"\r\n}']},{type:"midi_arg_compare_note",title:"midi_arg_compare_note",short_description:["Used to modify the requirements of a MIDI Event to also require that a note is or isn't played."],block_definition:['{\r\n  "type": "midi_arg_compare_note",\r\n  "message0": "when note %1 %2 %3",\r\n  "args0": [\r\n    {\r\n      "type": "field_dropdown",\r\n      "name": "condition",\r\n      "options": [\r\n        [\r\n          "is",\r\n          "is"\r\n        ],\r\n        [\r\n          "is not",\r\n          "is not"\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      "type": "field_input",\r\n      "name": "note",\r\n      "text": "any"\r\n    },\r\n    {\r\n      "type": "input_value",\r\n      "name": "args",\r\n      "check": "midi_arg"\r\n    }\r\n  ],\r\n  "output": "midi_arg",\r\n  "colour": "#FF9D00",\r\n  "tooltip": "Compares the MIDI note",\r\n  "helpUrl": "https://midiblocks.com/block/midi_arg_compare_note"\r\n}']},{type:"midi_send_note",title:"midi_send_note",short_description:["Sends a MIDI note to a specific device and channel"],block_definition:['{\r\n  "type": "midi_send_note",\r\n  "message0": "Play note %1 on device %2 on channel %3",\r\n  "args0": [\r\n    {\r\n      "type": "field_input",\r\n      "name": "note",\r\n      "text": "C"\r\n    },\r\n    {\r\n      "type": "field_input",\r\n      "name": "device",\r\n      "text": "all"\r\n    },\r\n    {\r\n      "type": "field_input",\r\n      "name": "channel",\r\n      "text": "all"\r\n    }\r\n  ],\r\n  "previousStatement": null,\r\n  "nextStatement": null,\r\n  "colour": "#2EC4B6",\r\n  "tooltip": "",\r\n  "helpUrl": ""\r\n}']}]}}}};a["a"].use(L["a"]);var Y=function(){const e=new L["a"].Store({state:{reloads:0,api:{domain:"https://midiblocks.com",base:"wp-json/midiblocks"},user:{isLoggedIn:!1},post:{isChecking:!0},devices:{inputs:{},outputs:{}}},getters:{endpoint:e=>t=>Object(u["trimEnd"])(e.api.domain,"/")+"/"+Object(u["trimEnd"])(e.api.base,"/")+"/"+t},mutations:{set(e,t){Object(u["set"])(e,t[0],t[1])},tally(e,t){Object(u["set"])(e,t,Object(u["get"])(e,t)+1)}},actions:{apiGet({getters:e},t){let n,o={};return"string"===typeof t?n=t:(n=t.path,delete t.path,o=t),"remote"===a["a"].prototype.$q.config.storageMode?R.a.get(e.endpoint(n),o):new Promise(e=>{n=n.replace(/\//g,"."),e({data:Object(u["get"])(X.get,n)(o)})})}}});return e},Q=n("8c4f");const G=[{path:"/",component:()=>Promise.all([n.e(0),n.e(6)]).then(n.bind(null,"8e31")),children:[{name:"Home",path:"",component:()=>Promise.all([n.e(0),n.e(7)]).then(n.bind(null,"bc13"))},{name:"Studio",path:"/studio",component:()=>Promise.all([n.e(0),n.e(5)]).then(n.bind(null,"cf36"))},{name:"Library",path:"/library",component:()=>Promise.all([n.e(0),n.e(3)]).then(n.bind(null,"730a"))},{name:"Factory",path:"/factory",component:()=>Promise.all([n.e(0),n.e(2)]).then(n.bind(null,"dc73"))}]},{path:"/readonly",component:()=>Promise.all([n.e(0),n.e(8)]).then(n.bind(null,"2c8a")),children:[{name:"ReadOnly",path:":id",component:()=>Promise.all([n.e(0),n.e(4)]).then(n.bind(null,"a0c0"))}]},{path:"*",component:()=>n.e(9).then(n.bind(null,"e51e"))}];var V=G;a["a"].use(Q["a"]);var J=function(){const e=new Q["a"]({scrollBehavior:()=>({x:0,y:0}),routes:V,mode:"history",base:"/"});return e},K=function(){return W.apply(this,arguments)};function W(){return W=i()((function*(){const e="function"===typeof Y?yield Y({Vue:a["a"]}):Y,t="function"===typeof J?yield J({Vue:a["a"],store:e}):J;e.$router=t;const n={router:t,store:e,render:e=>e(H),el:"#q-app"};return{app:n,store:e,router:t}})),W.apply(this,arguments)}var z=n("d4cd"),Z=n.n(z),ee=n("9224"),te=n("bc78");n("afe2");a["a"].prototype.$axios=R.a,a["a"].prototype.$v=ee.version,a["a"].prototype.$markdown=new Z.a,a["a"].config.ignoredElements=["field","block","category","xml","mutation","value","sep"],te["a"].setBrand("menu-item-not-selected","#a599e9");var ne=n("8a60"),oe=n.n(ne);const ie={},ae=oe.a.prototype.stopCallback;oe.a.prototype.stopCallback=function(e,t,n,o){const i=this;return!!i.paused||!ie[n]&&!ie[o]&&ae.call(i,e,t,n)},oe.a.prototype.bindGlobal=function(e,t,n){const o=this;if(o.bind(e,t,n),e instanceof Array)for(var i=0;i<e.length;i++)ie[e[i]]=!0;else ie[e]=!0},oe.a.init(),a["a"].prototype.$mousetrap=oe.a;const le="/wp-content/themes/midiblocks/app/",re=/\/\//,de=e=>(le+e).replace(re,"/");function se(){return ce.apply(this,arguments)}function ce(){return ce=i()((function*(){const{app:e,store:t,router:n}=yield K();let o=!1;const i=e=>{o=!0;const t=Object(e)===e?de(n.resolve(e).route.fullPath):e;window.location.href=t},l=window.location.href.replace(window.location.origin,""),r=[void 0,void 0];for(let s=0;!1===o&&s<r.length;s++)if("function"===typeof r[s])try{yield r[s]({app:e,router:n,store:t,Vue:a["a"],ssrContext:null,redirect:i,urlPath:l,publicPath:le})}catch(d){return d&&d.url?void(window.location.href=d.url):void console.error("[Quasar] boot error:",d)}!0!==o&&new a["a"](e)})),ce.apply(this,arguments)}se()},"5a21":function(e,t,n){},9224:function(e){e.exports=JSON.parse('{"name":"midiblocks","version":"0.2.0","description":"A visual MIDI mapping and scripting platform","productName":"Midiblocks","author":"Oz Ramos <midiblocks@gmail.com>","private":true,"scripts":{"start":"npm run dev:local","dev":"npm run dev:local","dev:local":"quasar dev --use-local-storage","dev:remote":"quasar dev --use-remote-storage","build":"quasar build --use-local-storage","build:local":"quasar build --use-local-storage","build:remote":"quasar build --use-remote-storage","lint":"eslint --ext .js,.vue ./","test":"echo \\"No test specified\\" && exit 0"},"dependencies":{"@babel/standalone":"^7.11.6","@quasar/extras":"^1.0.0","axios":"^0.18.1","blockly":"^3.20200625.2","core-js":"^3.6.5","geteventlisteners":"^1.1.0","js-file-download":"^0.4.12","js-interpreter":"^2.2.0","markdown-it":"^11.0.0","monaco-editor-webpack-plugin":"^1.9.0","mousetrap":"^1.6.5","quasar":"^1.0.0","store":"^2.0.12","uuid":"^8.3.0","vue-monaco":"^1.2.1","webmidi":"^2.5.1"},"devDependencies":{"@quasar/app":"^2.0.0","@quasar/quasar-app-extension-qenv":"^1.0.3","babel-eslint":"^10.0.1","eslint":"^6.8.0","eslint-config-prettier":"^6.9.0","eslint-loader":"^3.0.3","eslint-plugin-vue":"^6.1.2","pug":"^3.0.0","pug-plain-loader":"^1.0.0","raw-loader":"^4.0.1"},"browserslist":["last 10 Chrome versions","last 10 Firefox versions","last 4 Edge versions","last 7 Safari versions","last 8 Android versions","last 8 ChromeAndroid versions","last 8 FirefoxAndroid versions","last 10 iOS versions","last 5 Opera versions"],"engines":{"node":">= 10.18.1","npm":">= 6.13.4"}}')},a54e:function(e){e.exports=JSON.parse('{"localStorage":{"currentStudio":{"workspace":"<xml xmlns=\\"https://developers.google.com/blockly/xml\\"><block type=\\"event_midi\\" id=\\"`@y=u7gC7Wd%AkjJ[d[s\\" x=\\"225\\" y=\\"175\\"><field name=\\"event\\">noteon</field><field name=\\"device\\">any</field><statement name=\\"statements\\"><block type=\\"note_send\\" id=\\"YKQEtP[5EM!I^y==nMx|\\"><field name=\\"note\\">C4</field><field name=\\"device\\">all</field><field name=\\"channel\\">all</field></block></statement></block></xml>"},"blocks":{"8ca00364-2af4-4ffa-8e14-e11bb82e9242":{"uuid":"8ca00364-2af4-4ffa-8e14-e11bb82e9242","json":{"type":"event_midi","tooltip":"","helpUrl":"https://midiblocks.com/help/block/event_midi","message0":"🎹 MIDI %1 from %2 %3 %4","args0":[{"type":"field_dropdown","name":"event","options":[["Any","any"],["Note On","noteon"],["Note Off","noteoff"],["Control Change","controlchange"]]},{"type":"field_input","name":"device","text":"any"},{"type":"input_value","name":"args"},{"type":"input_statement","name":"statements"}],"colour":"#fad000"},"code":"/**\\r\\n * Captures a MIDI event from a specific device\\r\\n */\\r\\naddEventListener($event, [{\\r\\n  type: \'midi_arg_compare_device\',\\r\\n  condition: \'is\',\\r\\n  device: $device\\r\\n}, $args], function (event) {\\r\\n  var data = event.payload\\r\\n  var args = event.args\\r\\n\\r\\n  console.log(\'event\', event)\\r\\n  \\r\\n  // Exit if midi_args fail\\r\\n  var isValid = true\\r\\n  event.args.forEach(function (arg) {\\r\\n    switch (arg.type) {\\r\\n      case \'midi_arg_compare_device\':\\r\\n        if (!isAny(arg.device)\\r\\n          && !compare(arg.device, arg.condition, data.target.id))\\r\\n            isValid = false\\r\\n      break\\r\\n      case \'midi_arg_compare_note\':\\r\\n        if (!isAny(arg.note)\\r\\n          && !isNote(arg.note, arg.condition, data.note))\\r\\n            isValid = false\\r\\n      break\\r\\n    }\\r\\n  })\\r\\n  if (!isValid) return\\r\\n\\r\\n  $statements()\\r\\n})","variables":[{"type":"field","field":"dropdown","name":"event"},{"type":"field","field":"text","name":"device"},{"type":"input","input":"value","name":"args"},{"type":"input","input":"statements","name":"statements"}],"category":"event","name":"event_midi","workspace":"<xml xmlns=\\"https://developers.google.com/blockly/xml\\"><block type=\\"factory_base\\" id=\\"t$|lGx6,n`M.OCL8smyy\\" deletable=\\"false\\" movable=\\"false\\" x=\\"10\\" y=\\"10\\"><mutation connections=\\"NONE\\"></mutation><field name=\\"name\\">event_midi</field><field name=\\"category\\">event</field><field name=\\"INLINE\\">AUTO</field><field name=\\"CONNECTIONS\\">NONE</field><statement name=\\"INPUTS\\"><block type=\\"input_value\\" id=\\"$moeAKwWCgfo3PgX-8VW\\"><field name=\\"INPUTNAME\\">args</field><field name=\\"ALIGN\\">LEFT</field><statement name=\\"FIELDS\\"><block type=\\"field_static\\" id=\\"T.9SJk8EAQb.P!+0p=t?\\"><field name=\\"TEXT\\">🎹 MIDI</field><next><block type=\\"field_dropdown\\" id=\\"7J4GF2PS|vN8:_YEHmQ.\\"><mutation options=\\"4\\"></mutation><field name=\\"FIELDNAME\\">event</field><field name=\\"USER0\\">Any</field><field name=\\"CPU0\\">any</field><field name=\\"USER1\\">Note On</field><field name=\\"CPU1\\">noteon</field><field name=\\"USER2\\">Note Off</field><field name=\\"CPU2\\">noteoff</field><field name=\\"USER3\\">Control Change</field><field name=\\"CPU3\\">controlchange</field><next><block type=\\"field_static\\" id=\\"V07KDPeHZG4d%fdv#-eA\\"><field name=\\"TEXT\\">from</field><next><block type=\\"field_input\\" id=\\"JLab%(onn?N[fa?76sja\\"><field name=\\"TEXT\\">any</field><field name=\\"FIELDNAME\\">device</field></block></next></block></next></block></next></block></statement><value name=\\"TYPE\\"><shadow type=\\"type_null\\" id=\\"9gK}SeZHolj,54ITtyV6\\"></shadow></value><next><block type=\\"input_statement\\" id=\\"b()tn17a8Ye6Wls*BAYv\\"><field name=\\"INPUTNAME\\">statements</field><field name=\\"ALIGN\\">LEFT</field><value name=\\"TYPE\\"><shadow type=\\"type_null\\" id=\\"1xa(gbq[!dXPdM}oW(-%\\"></shadow></value></block></next></block></statement><value name=\\"COLOR\\"><shadow type=\\"style_color\\" id=\\"y{/U;@fF58:B+Gn#YY5?\\"><mutation colour=\\"#fad000\\"></mutation><field name=\\"COLOR\\">#fad000</field></shadow></value></block></xml>"},"034615d7-7e9b-49ab-b767-29ef05996181":{"uuid":"034615d7-7e9b-49ab-b767-29ef05996181","json":{"type":"event_mod_note","tooltip":"","helpUrl":"https://midiblocks.com/help/block/event_mod_note","message0":"when note %1 %2 %3","args0":[{"type":"field_dropdown","name":"condition","options":[["is","is"],["is not","not"]]},{"type":"field_input","name":"note","text":"any"},{"type":"input_value","name":"args"}],"output":null,"colour":"#ff9d00"},"code":"/**\\r\\n * Returns an event modifier\\r\\n */\\r\\n(() => {\\r\\n  return {\\r\\n    type: \'midi_arg_compare_note\',\\r\\n    condition: $condition,\\r\\n    note: $note\\r\\n  }\\r\\n})()\\r\\n","variables":[{"type":"field","field":"dropdown","name":"condition"},{"type":"field","field":"text","name":"note"},{"type":"input","input":"value","name":"args"}],"name":"event_mod_note","category":"event_modifier","workspace":"<xml xmlns=\\"https://developers.google.com/blockly/xml\\"><block type=\\"factory_base\\" id=\\"f2PkS:o!r@AX(v%dahnB\\" deletable=\\"false\\" movable=\\"false\\" x=\\"10\\" y=\\"10\\"><mutation connections=\\"LEFT\\"></mutation><field name=\\"name\\">event_mod_note</field><field name=\\"category\\">event_modifier</field><field name=\\"INLINE\\">AUTO</field><field name=\\"CONNECTIONS\\">LEFT</field><statement name=\\"INPUTS\\"><block type=\\"input_value\\" id=\\"6CnV~#8BguD{[#`o4Mp]\\"><field name=\\"INPUTNAME\\">args</field><field name=\\"ALIGN\\">LEFT</field><statement name=\\"FIELDS\\"><block type=\\"field_static\\" id=\\"O^n*!{gD3(A},Jm|TgX}\\"><field name=\\"TEXT\\">when note</field><next><block type=\\"field_dropdown\\" id=\\"H:dWJACQACqLHnFnLa?6\\"><mutation options=\\"2\\"></mutation><field name=\\"FIELDNAME\\">condition</field><field name=\\"USER0\\">is</field><field name=\\"CPU0\\">is</field><field name=\\"USER1\\">is not</field><field name=\\"CPU1\\">not</field><next><block type=\\"field_input\\" id=\\"dg!^|3fJJ1y6SvYe0lWH\\"><field name=\\"TEXT\\">any</field><field name=\\"FIELDNAME\\">note</field></block></next></block></next></block></statement><value name=\\"TYPE\\"><shadow type=\\"type_null\\" id=\\"n7-%Xu5dv!XSm%ILhiR-\\"></shadow></value></block></statement><value name=\\"OUTPUTTYPE\\"><shadow type=\\"type_null\\" id=\\"*I_Xc61o08G!y[)hW-IW\\"></shadow></value><value name=\\"COLOR\\"><shadow type=\\"style_color\\" id=\\"YDOnP8!8$HoNE3WS$NmB\\"><mutation colour=\\"#ff9d00\\"></mutation><field name=\\"COLOR\\">#ff9d00</field></shadow></value></block></xml>"},"6aa37803-b678-48e6-b9e1-c81bb3e339d4":{"uuid":"6aa37803-b678-48e6-b9e1-c81bb3e339d4","json":{"type":"note_send","tooltip":"","helpUrl":"https://midiblocks.com/help/block/note_send","message0":"Play note %1 on device %2 on channel %3","args0":[{"type":"field_input","name":"note","text":"C4"},{"type":"field_input","name":"device","text":"all"},{"type":"field_input","name":"channel","text":"all"}],"previousStatement":null,"nextStatement":null,"colour":"#2ec4b6"},"code":"playNote({\\r\\n  event: typeof event !== \'undefined\' ? event : null,\\r\\n  note: $note,\\r\\n  channel: $channel,\\r\\n  device: $device\\r\\n})","variables":[{"type":"field","field":"text","name":"note"},{"type":"field","field":"text","name":"device"},{"type":"field","field":"text","name":"channel"}],"name":"note_send","category":"event_send","workspace":"<xml xmlns=\\"https://developers.google.com/blockly/xml\\"><block type=\\"factory_base\\" id=\\"BgrE.bl56Y{6HtTC0U.K\\" deletable=\\"false\\" movable=\\"false\\" x=\\"10\\" y=\\"10\\"><mutation connections=\\"BOTH\\"></mutation><field name=\\"name\\">note_send</field><field name=\\"category\\">event_send</field><field name=\\"INLINE\\">AUTO</field><field name=\\"CONNECTIONS\\">BOTH</field><statement name=\\"INPUTS\\"><block type=\\"input_dummy\\" id=\\"=0Ia{a%%I#b=(A=(,Hm2\\"><field name=\\"ALIGN\\">LEFT</field><statement name=\\"FIELDS\\"><block type=\\"field_static\\" id=\\"UtcMrL0)hvKiD9^,%E_9\\"><field name=\\"TEXT\\">Play note</field><next><block type=\\"field_input\\" id=\\"G,Lka!y0BC{U48A#Fg8H\\"><field name=\\"TEXT\\">C4</field><field name=\\"FIELDNAME\\">note</field><next><block type=\\"field_static\\" id=\\"gqgx}jvIu0;@oplpMOln\\"><field name=\\"TEXT\\">on device</field><next><block type=\\"field_input\\" id=\\"RPTgHe/xBu$1j5;VH-p|\\"><field name=\\"TEXT\\">all</field><field name=\\"FIELDNAME\\">device</field><next><block type=\\"field_static\\" id=\\"giJKeywn;(+CFyYN5I?m\\"><field name=\\"TEXT\\">on channel</field><next><block type=\\"field_input\\" id=\\"8w9-E|1P2p=2obEjvDd]\\"><field name=\\"TEXT\\">all</field><field name=\\"FIELDNAME\\">channel</field></block></next></block></next></block></next></block></next></block></next></block></statement></block></statement><value name=\\"TOPTYPE\\"><shadow type=\\"type_null\\" id=\\"FAiHW^^pnFXv`tfwKTS.\\"></shadow></value><value name=\\"BOTTOMTYPE\\"><shadow type=\\"type_null\\" id=\\"Dh]*a,9f(iI4w4zLS?R4\\"></shadow></value><value name=\\"COLOR\\"><shadow type=\\"style_color\\" id=\\"+N50o_Dai7ha;]$o06F;\\"><mutation colour=\\"#2ec4b6\\"></mutation><field name=\\"COLOR\\">#2ec4b6</field></shadow></value></block></xml>"}},"currentFactory":{"uuid":"6aa37803-b678-48e6-b9e1-c81bb3e339d4","json":{"type":"note_send","tooltip":"","helpUrl":"https://midiblocks.com/help/block/note_send","message0":"Play note %1 on device %2 on channel %3","args0":[{"type":"field_input","name":"note","text":"C4"},{"type":"field_input","name":"device","text":"all"},{"type":"field_input","name":"channel","text":"all"}],"previousStatement":null,"nextStatement":null,"colour":"#2ec4b6"},"code":"playNote({\\r\\n  event: typeof event !== \'undefined\' ? event : null,\\r\\n  note: $note,\\r\\n  channel: $channel,\\r\\n  device: $device\\r\\n})","variables":[{"type":"field","field":"text","name":"note"},{"type":"field","field":"text","name":"device"},{"type":"field","field":"text","name":"channel"}],"name":"note_send","category":"event_send","workspace":"<xml xmlns=\\"https://developers.google.com/blockly/xml\\"><block type=\\"factory_base\\" id=\\"BgrE.bl56Y{6HtTC0U.K\\" deletable=\\"false\\" movable=\\"false\\" x=\\"10\\" y=\\"10\\"><mutation connections=\\"BOTH\\"></mutation><field name=\\"name\\">note_send</field><field name=\\"category\\">event_send</field><field name=\\"INLINE\\">AUTO</field><field name=\\"CONNECTIONS\\">BOTH</field><statement name=\\"INPUTS\\"><block type=\\"input_dummy\\" id=\\"=0Ia{a%%I#b=(A=(,Hm2\\"><field name=\\"ALIGN\\">LEFT</field><statement name=\\"FIELDS\\"><block type=\\"field_static\\" id=\\"UtcMrL0)hvKiD9^,%E_9\\"><field name=\\"TEXT\\">Play note</field><next><block type=\\"field_input\\" id=\\"G,Lka!y0BC{U48A#Fg8H\\"><field name=\\"TEXT\\">C4</field><field name=\\"FIELDNAME\\">note</field><next><block type=\\"field_static\\" id=\\"gqgx}jvIu0;@oplpMOln\\"><field name=\\"TEXT\\">on device</field><next><block type=\\"field_input\\" id=\\"RPTgHe/xBu$1j5;VH-p|\\"><field name=\\"TEXT\\">all</field><field name=\\"FIELDNAME\\">device</field><next><block type=\\"field_static\\" id=\\"giJKeywn;(+CFyYN5I?m\\"><field name=\\"TEXT\\">on channel</field><next><block type=\\"field_input\\" id=\\"8w9-E|1P2p=2obEjvDd]\\"><field name=\\"TEXT\\">all</field><field name=\\"FIELDNAME\\">channel</field></block></next></block></next></block></next></block></next></block></next></block></statement></block></statement><value name=\\"TOPTYPE\\"><shadow type=\\"type_null\\" id=\\"FAiHW^^pnFXv`tfwKTS.\\"></shadow></value><value name=\\"BOTTOMTYPE\\"><shadow type=\\"type_null\\" id=\\"Dh]*a,9f(iI4w4zLS?R4\\"></shadow></value><value name=\\"COLOR\\"><shadow type=\\"style_color\\" id=\\"+N50o_Dai7ha;]$o06F;\\"><mutation colour=\\"#2ec4b6\\"></mutation><field name=\\"COLOR\\">#2ec4b6</field></shadow></value></block></xml>"},"splitter":500}}')},bd61:function(e,t,n){}});